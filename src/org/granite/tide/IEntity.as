/*
 *   GRANITE DATA SERVICES
 *   Copyright (C) 2006-2014 GRANITE DATA SERVICES S.A.S.
 *
 *   This file is part of the Granite Data Services Platform.
 *
 *                               ***
 *
 *   Community License: GPL 3.0
 *
 *   This file is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published
 *   by the Free Software Foundation, either version 3 of the License,
 *   or (at your option) any later version.
 *
 *   This file is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 *                               ***
 *
 *   Available Commercial License: GraniteDS SLA 1.0
 *
 *   This is the appropriate option if you are creating proprietary
 *   applications and you are not prepared to distribute and share the
 *   source code of your application under the GPL v3 license.
 *
 *   Please visit http://www.granitedataservices.com/license for more
 *   details.
 */
package org.granite.tide {
	
	import mx.core.IPropertyChangeNotifier;
	
	/**
	 * 	Interface for Tide managed entities
	 *  In general it will be implemented by entities generated by gas3.
	 *  
	 *  Otherwise it can also be implemented by simple ActionScript entities with :
	 *   
	 * 
	 * 	@author William DRAI
	 */
	public interface IEntity extends IPropertyChangeNotifier {
		
//		/**
//		 *	Merge with an modified entity instance coming from another context of from the server
//		 * 
//		 * 	@param em entity manager context
//		 *  @param entity external entity
//		 */ 
//        function meta_merge(em:IEntityManager, entity:*):void;		
//		
//		/**
//		 *	Defines the EntityManager context for this entity
//		 * 
//		 * 	@param em entity manager context
//		 */ 
//		function meta_setEntityManager(em:IEntityManager):void;
//		
//		/**
//		 *	Return the EntityManager context for this entity
//		 * 
//		 * 	@return the entity manager
//		 */ 
//		function meta_getEntityManager():IEntityManager;
	}
}
